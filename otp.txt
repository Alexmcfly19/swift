import SwiftUI

struct OTPView: View {
    let emailOrPhone: String
    @State private var otpCode: String = ""
    @State private var isLoading = false
    @State private var message = ""
    
    var body: some View {
        ZStack {
            Image("earth_bg")
                .resizable()
                .scaledToFill()
                .ignoresSafeArea()
            
            LinearGradient(gradient: Gradient(colors: [Color.black.opacity(0.6), Color.black.opacity(0.3)]),
                           startPoint: .top,
                           endPoint: .bottom)
                .ignoresSafeArea()
            
            VStack(spacing: 20) {
                Spacer()
                
                Text("Please enter 6 digit number we sent to you")
                    .foregroundColor(.white)
                    .padding()
                
                HStack(spacing: 10) {
                    ForEach(0..<6) { index in
                        ZStack {
                            Rectangle()
                                .fill(Color.white.opacity(0.9))
                                .frame(width: 45, height: 55)
                                .cornerRadius(8)
                            
                            if otpCode.count > index {
                                Text(String(otpCode[otpCode.index(otpCode.startIndex, offsetBy: index)]))
                                    .font(.title)
                                    .fontWeight(.bold)
                            }
                        }
                    }
                }
                
                TextField("", text: $otpCode)
                    .keyboardType(.numberPad)
                    .opacity(0.01) // hidden but keeps keyboard active
                    .frame(width: 1, height: 1)
                    .onChange(of: otpCode) { newValue in
                        if newValue.count > 6 {
                            otpCode = String(newValue.prefix(6))
                        }
                    }
                    .padding(.bottom, -50)
                
                Button(action: {
                    verifyOTP()
                }) {
                    if isLoading {
                        ProgressView()
                            .progressViewStyle(CircularProgressViewStyle(tint: .white))
                            .frame(maxWidth: .infinity)
                            .padding()
                            .background(Color.blue)
                            .cornerRadius(10)
                    } else {
                        Text("Continue")
                            .fontWeight(.semibold)
                            .frame(maxWidth: .infinity)
                            .padding()
                            .background(Color.blue)
                            .foregroundColor(.white)
                            .cornerRadius(10)
                    }
                }
                .padding(.horizontal, 32)
                
                if !message.isEmpty {
                    Text(message)
                        .foregroundColor(.white)
                        .padding(.top, 10)
                }
                
                Button("Didnâ€™t get the code? Resend") {
                    resendOTP()
                }
                .foregroundColor(.blue)
                .padding(.top, 10)
                
                Spacer()
            }
        }
    }
    
    func verifyOTP() {
        guard otpCode.count == 6 else {
            message = "Enter full 6 digit code."
            return
        }
        
        isLoading = true
        message = ""
        
        guard let url = URL(string: "https://api.com/verify-otp") else { return }
        var request = URLRequest(url: url)
        request.httpMethod = "POST"
        request.setValue("application/json", forHTTPHeaderField: "Content-Type")
        let body: [String: Any] = ["emailOrPhone": emailOrPhone, "otp": otpCode]
        request.httpBody = try? JSONSerialization.data(withJSONObject: body)
        
        URLSession.shared.dataTask(with: request) { data, response, error in
            DispatchQueue.main.async { self.isLoading = false }
            
            if let error = error {
                DispatchQueue.main.async { self.message = " Error: \(error.localizedDescription)" }
                return
            }
            
            guard let data = data else { return }
            if let json = try? JSONSerialization.jsonObject(with: data) as? [String: Any] {
                DispatchQueue.main.async {
                    if let success = json["success"] as? Bool, success {
                        self.message = " OTP Verified! Logged in."
                        //  Navigate to Home screen
                    } else {
                        self.message = json["message"] as? String ?? " Invalid OTP"
                    }
                }
            }
        }.resume()
    }
    
    func resendOTP() {
        guard let url = URL(string: "https://api.com/resend-otp") else { return }
        var request = URLRequest(url: url)
        request.httpMethod = "POST"
        request.setValue("application/json", forHTTPHeaderField: "Content-Type")
        let body: [String: Any] = ["emailOrPhone": emailOrPhone]
        request.httpBody = try? JSONSerialization.data(withJSONObject: body)
        
        URLSession.shared.dataTask(with: request) { _, _, _ in
            DispatchQueue.main.async {
                self.message = " OTP resent!"
            }
        }.resume()
    }
}
