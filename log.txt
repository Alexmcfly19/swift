import SwiftUI

struct LoginView: View {
    @State private var email: String = ""
    @State private var navigateToOTP = false
    @State private var isLoading = false
    @State private var errorMessage: String?

    var body: some View {
        NavigationView {
            ZStack {
 
                LinearGradient(gradient: Gradient(colors: [Color.black.opacity(0.6), Color.clear]),
                               startPoint: .top,
                               endPoint: .bottom)
                    .ignoresSafeArea()
                
                VStack(spacing: 30) {
                    ReChordLogo()

                    VStack(alignment: .leading, spacing: 8) {
                        Text("Email")
                            .foregroundColor(.white)
                            .font(.headline)
                        TextField("Enter your email", text: $email)
                            .textFieldStyle(RoundedBorderTextFieldStyle())
                            .keyboardType(.emailAddress)
                            .autocapitalization(.none)
                    }
                    .padding(.horizontal, 30)

                    if let error = errorMessage {
                        Text(error)
                            .foregroundColor(.red)
                            .font(.caption)
                    }

                    NavigationLink(destination: OTPView(email: email), isActive: $navigateToOTP) {
                        EmptyView()
                    }

                    Button(action: {
                        Task {
                            isLoading = true
                            let success = await APIService.shared.login(email: email)
                            isLoading = false
                            if success {
                                navigateToOTP = true
                            } else {
                                errorMessage = "Login failed. Please try again."
                            }
                        }
                    }) {
                        Text(isLoading ? "Loading..." : "Login")
                            .foregroundColor(.white)
                            .frame(maxWidth: .infinity)
                            .padding()
                            .background(Color.blue)
                            .cornerRadius(10)
                    }
                    .padding(.horizontal, 30)
                }
            }
        }
    }
}
